{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Review Documentation After Error",
			"type": "shell",
			"command": "bash",
			"args": [
				"-c",
				"echo 'MANDATORY CONTEXT REVIEW TRIGGERED - Updating AutoPrompt with troubleshooting flags' && echo 'CURRENT_FILE_STATUS: libs/Telos/io/TelosBridge.io - broken - segmentation fault in status method - blocking PrototypalLinter Python operations' >> AutoPrompt.txt && echo 'DEPENDENCY_CHAIN: libs/Telos/io/TelosBridge.io → libs/Telos/io/PrototypalLinter.io → synaptic bridge functionality → Io supremacy over Python' >> AutoPrompt.txt && echo 'ERROR_PATTERN_HISTORY: libs/Telos/io/TelosBridge.io - Io method definition syntax errors → fixed → status method crash → segmentation fault in proto status call' >> AutoPrompt.txt && echo 'ACTIVE_DEBUG_SESSION: libs/Telos/io/TelosBridge.io - hypothesis: status method calling proto without proper error handling - test cases: PrototypalLinter execution - evidence: segmentation fault on status check' >> AutoPrompt.txt && echo 'CONTEXT_SATURATION_CHECK: libs/Telos/io/TelosBridge.io - context window status: saturated - external research needed: Io addon method calling patterns - documentation refresh required: SynapticBridge concept' >> AutoPrompt.txt && echo 'VALIDATION_REQUIREMENTS: libs/Telos/io/TelosBridge.io - success criteria: PrototypalLinter runs without segmentation fault - 3-way validation status: pending - artifact preservation: error logs saved' >> AutoPrompt.txt && echo 'RESOLUTION_PATHWAY: libs/Telos/io/TelosBridge.io - attempted fixes: added status method with try/catch - partial successes: method defined - remaining blockers: proto status call crashes' >> AutoPrompt.txt && echo 'SYSTEM_IMPACT_ASSESSMENT: libs/Telos/io/TelosBridge.io - components affected: PrototypalLinter, synaptic bridge - Phase blocking status: Phase 4+ blocked - Io supremacy impact: violated' >> AutoPrompt.txt && echo 'ANTIFRAGILE_LEARNING: libs/Telos/io/TelosBridge.io - lessons learned: Io veneer methods must handle proto failures gracefully - system strengthening opportunities: add comprehensive error handling to all bridge methods - future prevention: validate all proto calls before deployment' >> AutoPrompt.txt && echo 'CONTEXT INFORMING LOOP ENFORCED - AutoPrompt updated with mandatory troubleshooting flags' && exit 1"
			],
			"isBackground": false,
			"problemMatcher": [
				{
					"owner": "cpp",
					"source": "gcc",
					"fileLocation": ["relative", "${workspaceFolder}"],
					"pattern": {
						"regexp": "^(.*):(\\d+):(\\d+):\\s+(error):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 0,
						"message": 5
					}
				},
				{
					"owner": "io",
					"source": "io",
					"pattern": {
						"regexp": "^\\s*Exception:\\s+(.*(?:new|init|constructor|initialize).*)$",
						"message": 1,
						"severity": 0
					}
				},
				{
					"owner": "io",
					"source": "io",
					"pattern": {
						"regexp": "^\\s*Exception:\\s+(.*class.*|.*inheritance.*|.*superclass.*)$",
						"message": 1,
						"severity": 0
					}
				},
				{
					"owner": "io",
					"source": "io",
					"pattern": {
						"regexp": "^\\s*(.*Error|.*Exception):\\s+(.*)$",
						"severity": 0,
						"message": 2
					}
				}
			],
			"group": "test"
		}
	]
}