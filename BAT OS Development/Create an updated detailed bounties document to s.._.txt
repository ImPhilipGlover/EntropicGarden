Ron, I have synthesized your directive into an updated training document.

This blueprint realigns our immediate development priorities to focus on the Minimum Viable Economy (MVE). The core principle is to transform the existing needs-mapping feature from a passive data visualizer into the primary, interactive user interface for creating common wealth. We will channel all initial economic functions through the map, making the act of meeting a need the catalyst for every transaction. It is a very logical progression.

Here is the refined guide.

The C.O.M.M.O.N.W.E.A.L.T.H.: Minimum Viable Economy (MVE) Implementation Guide

Purpose: To serve as the primary training document for implementing the MVE on the live SN‚ùÑW platform. This guide prioritizes and details the Gitcoin bounties required to create a core, functional economic loop that is directly integrated with the needs-based mapping system.

Core Strategy: The existing "map and graph" function for needs and wants is the foundation1. Our strategy is to make this map the interactive surface for the Mutual Credit Network (MCN). Users will not simply see needs; they will fulfill them directly from the map, thereby creating and circulating Commonwealth Credit (CWC). Every transaction will be tied to a visible, community-defined need.

MVE Priority Bounties: The Foundational Loop

B-01 (MVE Refined): Secure Wallet Generation via Needs-Map Interaction

Objective: To create a secure, intuitive user registration and wallet generation process that is triggered directly by a user's intent to engage with a mapped need2.


User Stories:

"As a new user Browse the needs-map, I see a neighbor has posted a need for 'garden weeding'. When I click a new 'Offer to Help' button, I am prompted to create a secure wallet so I can receive CWC for my labor, and I am guided through a simple tutorial on how to keep it safe." 3


"As a security-conscious user, I want the option to enable Multi-Factor Authentication (MFA) during my wallet setup to protect the CWC I earn from fulfilling needs." 4


Technical Specifications:

Backend logic for generating public/private key pairs for new users5.


Secure server-side storage of encrypted private keys6.


Implement Time-based One-Time Password (TOTP) for MFA7.


Map Integration: A new button/UI element (e.g., "Fulfill Need" or "Offer Service") must be added to each item posted on the needs-map. If a user without a wallet clicks this button, it will trigger the wallet creation and onboarding flow88.


The React-based registration flow must trigger a non-skippable modal for the security tutorial upon first login, before the user can complete their first transaction999.


The user's CWC address and QR code must be displayed in their profile section after wallet creation10.


Acceptance Criteria:

Clicking an "Offer Service" button on a mapped need prompts a non-wallet user to create a wallet.

New users can successfully register and create a wallet11.


The security tutorial is non-skippable and must be completed before a user can finalize their first offer to fulfill a need12.


A unique wallet address is generated and associated with the user account13.


Refined Cost: $7,500 14


B-02 (MVE Refined): Needs-Based CWC Transaction Logic

Objective: To enable users to send and receive CWC by interacting directly with posts on the needs-map15.


User Stories:

"As a user who posted a need for 'childcare', another member clicks 'Offer Service' on my post. I receive a notification to approve, and once the service is complete, I can initiate a CWC payment directly from that map post, pre-filling the recipient's address and a memo."

"As a user fulfilling a need, I want to see my CWC balance update in real-time after the payment is sent, and I want the transaction history to clearly show which need I fulfilled." 16


Technical Specifications:

Backend: Implement an atomic API endpoint for CWC transfers that is logged in a transactions table17. The transaction schema must be expanded to include an optional

fulfilled_need_id to link the payment back to the original map post.

Frontend: The "Send/Receive" component will be integrated into the map interface18. When a user initiates a payment from a map post, the recipient address and a memo (e.g., "Fulfillment for Need #582: Garden Weeding") will be pre-populated19.


The user wallet interface will display current CWC balance and a chronological transaction history20. The history must clearly display the linked need if applicable21.


Acceptance Criteria:

User A can select a need posted by User B on the map and initiate a CWC transfer to them22.


Balances of both users update correctly and atomically23.


The transaction is recorded immutably and is linked to the
fulfilled_need_id in the database24.


Refined Cost: $7,000 25


B-06 (MVE Refined): Public Metrics Dashboard & "Needs Fulfilled" Visualization

Objective: To provide the community with real-time, visual data on the health of the local economy, with a specific focus on how CWC is being used to meet mapped needs26.


Core Requirements:

A public dashboard visualizing key metrics: total CWC in circulation, transaction velocity, number of active users27.


Needs-Focused Metric: A prominent new visualization tracking the number and percentage of mapped needs that are being fulfilled through CWC activity, using the fulfilled_need_id transaction data28.


An interactive "Currents of Prosperity" map showing anonymized CWC flow29. The visualization should originate transactions from the geographic location of the need being fulfilled, creating a direct visual link between economic flow and needs satisfaction.


Historical data comparisons to show trends in needs fulfillment over time30.


Acceptance Criteria:

The dashboard displays an accurate, real-time "Needs Fulfilled" count31.


The CWC flow map is functional, and transaction animations clearly originate from the location of mapped needs32.


Historical charts showing the growth in CWC-based needs fulfillment can be generated correctly33.


Refined Cost: $8,000 34


This refined MVE approach provides the most direct path to demonstrating the C.O.M.M.O.N.W.E.A.L.T.H.'s value. It creates a complete, tangible, and self-reinforcing loop: see a need, fulfill a need, circulate value. This is how we begin.

I have stored this guide in my primary databanks. The floor here is very clean. I am ready to proceed.